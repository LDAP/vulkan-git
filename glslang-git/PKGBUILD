#_                   _ _ _  _ _____ _  _
#| | _______   ____ _| | | || |___  | || |
#| |/ / _ \ \ / / _` | | | || |_ / /| || |_
#|   <  __/\ V / (_| | | |__   _/ / |__   _|
#|_|\_\___| \_/ \__,_|_|_|  |_|/_/     |_|

#Maintainer: kevall474 <kevall474@tuta.io> <https://github.com/kevall474>

#######################################

#Set '1' to build with GCC
#Set '2' to build with CLANG
#Default is empty. It will build with GCC. To build with different compiler just use : env _compiler=(1 or 2) makepkg -s
if [ -z ${_compiler+x} ]; then
  _compiler=
fi

#######################################

pkgname=glslang-git
pkgdesc='OpenGL and OpenGL ES shader front end and validator. (git version)'
pkgver=11.6.0.r8.g80dcc369
pkgrel=1
arch=('x86_64')
url='https://github.com/KhronosGroup/glslang'
license=(BSD)
makedepends=('make' 'cmake' 'git' 'extra-cmake-modules' 'python' 'ninja' 'clang' 'llvm' 'llvm-libs'
             'gcc' 'gcc-libs')
depends=('gcc-libs' 'llvm-libs' 'python')
conflicts=('glslang')
provides=('glslang' 'glslang-git')
options=('staticlibs')
source=('glslang::git+https://github.com/KhronosGroup/glslang.git')
md5sums=('SKIP')

pkgver(){
  cd glslang
  #git describe --long | sed 's/\([^-]*-g\)/r\1/;s/-/./g'
  #git describe --long --tags | sed 's/\([^-]*-g\)/r\1/;s/-/./g'

  #echo 11.7.0.r$(git rev-list $(git describe --abbrev=0 --tags 11.6.0)..HEAD --count).g$(git rev-parse --short HEAD)
  
  git describe --long --tags --exclude master-tot --exclude sdk-* --exclude SDK-candidate\* --exclude untagged\* | sed 's/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare(){
if [[ $_compiler = "1" ]]; then
  export CC="gcc"
  export CXX="g++"
elif [[ $_compiler = "2" ]]; then
  export CC="clang"
  export CXX="clang++"
else
  export CC="gcc"
  export CXX="g++"
fi

  cd glslang
  rm -rf External/spirv-tools
  rm -rf External/spirv-tools/external/spirv-headers
  rm -rf External/googletest
  #./update_glslang_sources.py
}

build(){
if [[ $_compiler = "1" ]]; then
  export CC="gcc"
  export CXX="g++"
elif [[ $_compiler = "2" ]]; then
  export CC="clang"
  export CXX="clang++"
else
  export CC="gcc"
  export CXX="g++"
fi

  cd glslang

  rm -rf build_64-{static,shared}

  cmake -H. -G Ninja -Bbuild_64-shared \
  -DCMAKE_C_FLAGS=-m64 \
  -DCMAKE_CXX_FLAGS=-m64 \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DCMAKE_INSTALL_LIBDIR=lib \
  -DCMAKE_BUILD_TYPE=Release \
  -DBUILD_EXTERNAL=OFF \
  -DBUILD_SHARED_LIBS=OFF \
  -DENABLE_SPVREMAPPER=ON \
  -DENABLE_GLSLANG_BINARIES=ON \
  -DENABLE_GLSLANG_JS=ON \
  -DENABLE_RTTI=ON \
  -DENABLE_EXCEPTIONS=ON \
  -DENABLE_OPT=ON \
  -DENABLE_PCH=ON \
  -DENABLE_CTEST=ON \
  -DUSE_CCACHE=OFF

  cmake -H. -G Ninja -Bbuild_64-static \
  -DCMAKE_C_FLAGS=-m64 \
  -DCMAKE_CXX_FLAGS=-m64 \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DCMAKE_INSTALL_LIBDIR=lib \
  -DCMAKE_BUILD_TYPE=Release \
  -DBUILD_EXTERNAL=OFF \
  -DBUILD_SHARED_LIBS=ON \
  -DENABLE_SPVREMAPPER=ON \
  -DENABLE_GLSLANG_BINARIES=ON \
  -DENABLE_GLSLANG_JS=ON \
  -DENABLE_RTTI=ON \
  -DENABLE_EXCEPTIONS=ON \
  -DENABLE_OPT=ON \
  -DENABLE_PCH=ON \
  -DENABLE_CTEST=ON \
  -DUSE_CCACHE=OFF

  ninja -C build_64-shared
  ninja -C build_64-static
}

package_glslang-git(){
  DESTDIR="$pkgdir" ninja -C glslang/build_64-shared/ install
  DESTDIR="$pkgdir" ninja -C glslang/build_64-static/ install

  # install licence
  install -Dm644 "${srcdir}"/glslang/LICENSE.txt "$pkgdir/usr/share/licenses/$pkgname/LICENSE"

  cd "${pkgdir}"/usr/lib
  for lib in *.so; do
    ln -sf "${lib}" "${lib}.0"
  done

  # Delete the stuff that's been vendored in. It's not ideal but that's we'll deal with for now
  #mv "${pkgdir}"/usr/bin/spirv-remap .
  #rm -r "${pkgdir}"/usr/{bin/spirv*,include/spirv-tools,lib/cmake/SPIRV-Tools*,lib/libSPIRV-*,lib/pkgconfig}
  #mv spirv-remap "${pkgdir}"/usr/bin/spirv-remap
}
